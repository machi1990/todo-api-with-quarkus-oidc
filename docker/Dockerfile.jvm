####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
# We'll need to define our auth client id that will be picked up during the build. Defaults to "machi-todo-api". To do so, run the following command
# export CLIENT_ID = <your_auth_client_id_here>

# We'll need to define our auth auth_server_url_realm that will be picked up during the build. Defaults to "http://keycloak/auth/realms/todo-api". To do so, run the following command

# export AUTH_SERVER_URL = <your_auth_server_url_realm_here>

# Then execute the build using the command below

# cd ../machi-todo-api && mvn package
#
# Then, build the image with:
#
# docker build -f ../docker/Dockerfile.jvm -t quarkus/machi-todo-api-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/machi-todo-api-jvm
#
###
FROM fabric8/java-alpine-openjdk8-jre
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV AB_ENABLED=jmx_exporter
COPY target/lib/* /deployments/lib/
COPY target/*-runner.jar /deployments/app.jar
EXPOSE 8080

# run with user 1001 and be prepared for be running in OpenShift too
RUN adduser -G root --no-create-home --disabled-password 1001 \
  && chown -R 1001 /deployments \
  && chmod -R "g+rwX" /deployments \
  && chown -R 1001:root /deployments
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]